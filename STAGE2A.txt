// R0 = writing messages to screen
// R1 = Index into string in memory
// R2 = holds individual string characters or index
// R3 = Remaining matchsticks
// R4 = Amount to remove (Player)
// R5 = Amount to remove (Computer)
//-----------Name----------
// Ask for player input
      MOV R0, #AskName  // Print "Please enter your name"
      STR R0, .WriteString
//-----Store input ------
      MOV R0, #StoreName
      STR R0, .ReadString // Store user input in StoreName
//----Write Name-----
      MOV R0, #Player1
      STR R0, .WriteString
      MOV R0, #StoreName
      STR R0, .WriteString
//-------MatchSticks-------
Input_Matchsticks:
      MOV R0, #Amountv1 // Prompt for number of matchsticks
      STR R0, .WriteString
      MOV R0, #Num      // Load num address
      LDR R3, .InputNum // Read user input into R3
// Validate initial input for matchsticks
Validate_Matchsticks:
      CMP R3, #10
      BLT InvalidMatch  // Branch to Invalid if input < 10
      CMP R3, #100
      BGT InvalidMatch  // Branch to Invalid if input > 100
// Now we have a valid initial amount of matchsticks
      MOV R0, #Main     // Display initial matchsticks
      STR R0, .WriteString
      STR R3, .WriteUnsignedNum
      B Loop
//-------- Main Loop -------
Loop:
// Prompt for amount to remove
      MOV R0, #PlayerA
      STR R0, .WriteString
      MOV R0, #StoreName
      STR R0, .WriteString
      MOV R0, #Amountv2 // Ask "How many do you want to remove?"
      STR R0, .WriteString
      MOV R0, #Num      // Load num address
      LDR R4, .InputNum // Read user input into R4
// Validate input for matchsticks to remove
      CMP R4, #1
      BLT Invalid_Remove // Branch to invalid if input < 1
      CMP R4, #7        // Compare input with 8 (above 7)
      BGT Invalid_Remove // Branch to invalid if input >= 8
      CMP R4, R3        // Compare input with remaining matchsticks
      BGT Invalid_Remove // Branch to invalid if input > remaining
// Only perform subtraction if valid
      SUB R3, R3, R4    // Update remaining matchsticks
      MOV R0, #PlayerA
      STR R0, .WriteString
      MOV R0, #StoreName
      STR R0, .WriteString
      MOV R0, #ThereAre
      STR R0, .WriteString
      STR R3, .WriteUnsignedNum // Print remaining matchsticks
      CMP R3, #0
      BEQ Game_Over     // If remaining matchsticks are 0, end the game
// Computer's turn
ComputerTurn:
      LDR R5, .Random   // Load random number generator or function
      AND R5, R5, #6    // Get a number between 0 and 6
      ADD R5, R5, #1    // Convert to range 1 to 7
      CMP R5, R3        // Ensure computer does not take more than remaining
      BGT ComputerTurn  // If exceeds, repeat
      SUB R3, R3, R5    // Subtract computer's taken amount
      MOV R0, #comp     // Load computer's message
      STR R0, .WriteString
      STR R5, .WriteSignedNum // Show how many the computer has taken
      MOV R0, #LineBreak
      STR R0, .WriteString
      MOV R0, #ThereAre
      STR R0, .WriteString
      STR R3, .WriteUnsignedNum // Print remaining matchsticks after computer's turn
      BEQ Game_Over     // If remaining matchsticks are 0, end the game
      B Loop            // Repeat loop for next input
Invalid_Remove:
      MOV R0, #Invalid  // Load Invalid message
      STR R0, .WriteString
      B Loop            // Go back to asking how many to remove
InvalidMatch:
      MOV R0, #InvalidMatchStick // Load Invalid message for matchsticks
      STR R0, .WriteString
      B Input_Matchsticks // Go back to asking for matchsticks
Game_Over:
//print game over msg
      MOV R0, #GameOverMessage
      STR R0, .WriteString
      halt              // End the program
//-------Strings-------
PlayerA: .ASCIZ "\nPlayer "
ThereAre: .ASCIZ " there are "
Main: .ASCIZ " Matchsticks "
comp: .ASCIZ "\nComputer has taken: "
LineBreak: .ASCIZ "\n"
AskName: .ASCIZ "Please enter your name: "
Player1: .ASCIZ "\n  Player 1 is: "
Amountv1: .ASCIZ "\nHow many matchsticks (10-100): "
Amountv2: .ASCIZ " how many do you want to remove (1-7)? "
Num:  .word 0
InvalidMatchStick: .asciz "Invalid input. Please enter a number between 10 and 100.\n"
Invalid: .ASCIZ "\nInvalid input. Please enter a number between 1 and 7 for removal."
GameOverMessage: .ASCIZ "\nGame Over!\n"
none: .ASCIZ "\nThere are no more Matchsticks!"
StoreName: 
